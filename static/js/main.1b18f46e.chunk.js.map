{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","gutterbottom","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","key","App","state","fetchedData","setState","this","type","config","num","rps","radius","life","v","tha","alpha","scale","position","cross","random","bg","src","logo","image","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b18f46e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3OJZG\",\"card\":\"Cards_card__1s-wP\",\"infected\":\"Cards_infected__3Rs1Y\",\"recovered\":\"Cards_recovered__33g2U\",\"deaths\":\"Cards_deaths__2FZOC\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {  \r\n    if(!confirmed){\r\n        return 'Loading....';\r\n    }\r\n    return(\r\n        <div className = {styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async ( country ) => {\r\n    let changeableURL = url;\r\n    if(country){\r\n        changeableURL = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        console.log(modifiedData);\r\n        return modifiedData;     \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name );\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data : {confirmed, deaths, recovered}, country} ) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setDailyData( await fetchDailyData() );\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    console.log(confirmed, recovered, deaths);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date ),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'red',\r\n                    fill: true\r\n                },{\r\n                    data: dailyData.map(( { deaths } ) => deaths ),\r\n                    label: 'Deaths',\r\n                    borderColor: ' rgba(0, 4, 8, 0.5)',\r\n                    fill: true\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n             data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(255, 7, 7, 0.5)', 'rgba(28, 255, 7, 0.5)', 'rgba(0, 4, 8, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }],\r\n                \r\n            }}\r\n            options={{\r\n                legend: {display: false},\r\n                title:{ display: true, text: `Current state in ${country}`},\r\n            }}\r\n\r\n            \r\n        />) : null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ( { handleCountryChange } ) => {\r\n    const[countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setCountries]);\r\n\r\n    return(\r\n        <FormControl className={ styles.formControl }>\r\n            <NativeSelect defaultValue = '' onChange = {(event) => handleCountryChange(event.target.value)} >\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key ={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React, {Component} from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components'; \r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport logo from './images/image.png';\r\nimport ParticlesBg from 'particles-bg'\r\n\r\nclass App extends Component{\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const fetchedData = await fetchData();\r\n            this.setState({\r\n                data: fetchedData\r\n            });\r\n        }catch (error) {\r\n\r\n        }\r\n    }\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({\r\n            data: fetchedData,\r\n            country: country\r\n        });\r\n    }\r\n    render(){\r\n        const { data, country } = this.state;\r\n        let config = {\r\n            num: [8],\r\n            rps: 0.4,\r\n            radius: [10, 40],\r\n            life: [1.5, 3],\r\n            v: [2, 3],\r\n            tha: [-40, 40],\r\n            alpha: [0.7, 0],\r\n            scale: [.1, 0.4],\r\n            position: \"all\",\r\n            color: [\"#ed5362\"],\r\n            cross: \"dead\",\r\n            random: 25\r\n          };\r\n        return(\r\n            <div className = {styles.container}>\r\n                <ParticlesBg type=\"custom\" config={config} bg={true} />\r\n                <img src={logo} className={styles.image} alt=\"COVID-19\"></img>\r\n                <Cards data = {data}/>\r\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/>\r\n                <Chart data = {data} country={country}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3HrD5\",\"image\":\"App_image__hNvam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3eWMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__28KG7\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}